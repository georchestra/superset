# Values for Superset app
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nodeSelector:
  georchestra: "true"

extraEnvRaw: 
  - name: SUPERSET_APP_ROOT
    value: "/superset"
  - name: SUPERSET_LOAD_EXAMPLES
    value: "no"


secretEnv:
  # rather use an externally created secret since it seems we need to override the default one if 
  # using our own pg DB
  create: false

envFromSecret: my-georchestra-custom-superset-secret

# extraConfigs: 
#   georchestra_custom_roles.json: |
#     # Load the Guest_template role that will serve to define the Public role
#     # Optional
#     # Import it from config/georchestra_custom_roles.json file

image:
  repository: georchestra/superset
  tag: 20250220-1109-2eb787d98

supersetNode:
  startupProbe: 
    httpGet:
        path: /superset/health
  livenessProbe: 
    httpGet:
        path: /superset/health
  readinessProbe: 
    httpGet:
        path: /superset/health

postgresql:
  # Use geOrchestra's PostgreSQL app DB
  # You have to create a dedicated schema, user and give this user access 
  # only to this schema, using search_path
  enabled: false

######################################
# geOrchestra custom Superset config
######################################
# You can paste here the content of the files in config folder.
# But the recommended way is to provide those values through helm --set-file
# option. Look at the README.md

# extraSecrets: 
#   Preconfig.py: |
#     # Custom settings that would need to be run before the remaining config scripts
#     # Optional (empty by default)
#     # Import it from config/Preconfig.py file

#   LocalizationFr.py: |
#     # Custom settings for FR locale
#     # Import it from config/LocalizationFr.py file

#   GeorchestraCustomizations.py: |
#     # Import it from config/GeorchestraCustomizations.py file

#   Overrides.py: |
#     # Custom settings that would override previous config
#     # Optional (empty by default)
#     # Import it from config/Overrides.py file


# configOverrides: 
#   customconfig: |
#     # Import it from config/superset_georchestra_config.py file


init:
  # @default -- a script to create admin user and initialize roles
  initscript: |-
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    if [ -f "{{ .Values.extraConfigMountPath }}/georchestra_custom_roles.json" ]; then
      echo "Load the geOrchestra custom roles, including Guest_template"
      superset fab import-roles -p {{ .Values.extraConfigMountPath }}/georchestra_custom_roles.json
    fi
    echo "Initializing roles..."
    superset init
    if [ -f "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml
    fi